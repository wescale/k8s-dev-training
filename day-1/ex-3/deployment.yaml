apiVersion: v1
kind: Namespace
metadata:
  name: app
  labels:
    pod-security.kubernetes.io/enforce: baseline
    pod-security.kubernetes.io/enforce-version: latest
    pod-security.kubernetes.io/warn: baseline
    pod-security.kubernetes.io/warn-version: latest
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-svc
  namespace: app
spec:
  type: NodePort
  selector:
    app: nginx
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvc-vol-nginx
  namespace: app
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Mi 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx
  name: nginx
  namespace: app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
      namespace: app
    spec:
      initContainers:
      - name: init-html
        image: busybox:1.34.1
        command: ["/bin/sh", "-c", "echo '<h1>Hello !! </h1>I am loaded from <b>nginx-pvc</b> <br>Pod name: <b>\'$HOSTNAME\'' > /app/index.html && echo 'done' && exit "]
        volumeMounts:
        - mountPath: /app
          name: nginx-pvc
      containers:
      - image: nginx:1.23.1
        name: html
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: nginx-pvc
        readinessProbe:
          failureThreshold: 1
          httpGet:
            path: /
            port: 80
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          privileged: false
        imagePullPolicy: IfNotPresent
      volumes:
      - name: nginx-pvc
        persistentVolumeClaim:
          claimName: pvc-vol-nginx
